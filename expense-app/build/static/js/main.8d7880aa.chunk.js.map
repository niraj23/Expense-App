{"version":3,"sources":["constants/index.js","actions/index.js","slice/user.js","selectors/index.js","hooks/index.js","components/Home.js","components/Nav.js","components/List.js","containers/Lists.js","components/ExpenseForm.js","components/Expense.js","containers/Tracker.js","containers/Reports.js","utils/index.js","components/Main.js","components/UserForm.js","containers/SignUp.js","containers/LogIn.js","components/App.js","slice/lists.js","slice/reports.js","slice/expenses.js","slice/notifications.js","api/index.js","sagas/accountSagas.js","sagas/reportSaga.js","sagas/listSagas.js","sagas/expenseSagas.js","sagas/index.js","store/index.js","index.js"],"names":["SIGN_UP","LOG_IN","AUTHENTICATE_USER","EDIT_USER","SIGN_OUT","CREATE_LIST","UPDATE_LIST","DELETE_LIST","FETCH_EXPENSES","CREATE_EXPENSE","UPDATE_EXPENSE","DELETE_EXPENSE","dataList","value","color","signUpRequest","createAction","data","payload","user","logInRequest","signOutRequest","id","clearNotifications","fetchReport","createList","updateList","deleteList","fetchExpenses","createExpense","updateExpense","deleteExpense","requestFailed","message","initialState","authenticated","userSlice","createSlice","name","reducers","authenticateUser","state","action","editUserSucceeded","signOutSucceeded","actions","getUser","getLists","lists","length","getExpenses","expenses","getNotifications","notifications","useFormState","useState","setState","visible","setVisible","useEffect","handleChange","e","target","toggleDisplay","hidden","reset","useVerify","dispatch","useDispatch","navigate","useNavigate","useSelector","loggedIn","isLoading","error","Home","className","href","NavBar","replace","Navbar","style","background","Brand","Nav","Item","as","NavLink","to","pullRight","onClick","icon","size","List","trackExpenses","placeholder","type","onSubmit","preventDefault","onChange","Lists","username","toUpperCase","split","handle","listNames","map","list","availableOptions","filter","includes","handleUpdate","handleDelete","view","query","Card","Body","Text","variant","ExpenseForm","title","amount","date","notes","setter","submit","cancel","remove","newExpense","for","minLength","required","Form","Group","controlId","min","step","rows","maxLength","defaultProps","Expense","onUpdate","onDelete","Tracker","useSearchParams","searchParams","listName","get","listId","expense","Reports","chartContainer","useRef","expenditure","reports","allCategories","total","list_id","reduce","sum","initChartData","useCallback","ctx","current","labels","backgroundColor","category","find","chartType","chart","config","radius","Chart","defaults","responsive","maintainAspectRatio","datasets","hoverOffset","options","plugins","display","text","font","buildChart","destroy","ref","Main","path","element","UserForm","auth","email","password","confirm","SignUp","password_confirmation","setCustomValidity","LogIn","App","storage","localStorage","getItem","JSON","parse","alanBtn","key","onCommand","command","articles","console","log","ListSlice","fetchListsSucceeded","createListSucceeded","push","updateListSucceeded","deleteListSucceeded","reportSlice","fetchReportSucceeded","expenseSlice","fetchExpensesSucceeded","createExpenseSucceeded","updateExpenseSucceeded","deleteExpenseSucceeded","notificationSlice","extraReducers","builder","addCase","addMatcher","isAnyOf","client","axios","create","baseURL","withCredentials","interceptors","request","use","token","headers","common","Authorization","createAccount","post","signIn","userDetails","editUserDetails","params","put","signOut","delete","fetchLists","signUp","editAccount","call","api","setItem","stringify","removeItem","fetchReports","all","rootSaga","takeEvery","takeLatest","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","combineReducers","middleware","getDefaultMiddleware","prepend","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d7880aa.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://api-backend-phase4.herokuapp.com/';\n\nexport const SIGN_UP = 'user/signUp';\nexport const LOG_IN = 'user/logIn';\nexport const AUTHENTICATE_USER = 'user/authenticateUser';\nexport const EDIT_USER = 'user/edit';\nexport const EDIT_USER_SUCCESSFUL = 'user/editUserSucceeded';\nexport const SIGN_OUT = 'user/signOut';\nexport const SIGN_OUT_SUCCESSFUL = 'user/signOutSucceeded';\n\nexport const FETCH_LISTS_SUCCESSFUL = 'lists/fetchListsSucceeded';\nexport const CREATE_LIST = 'lists/createList';\nexport const CREATE_LIST_SUCCESSFUL = 'lists/createListSucceeded';\nexport const UPDATE_LIST = 'lists/updateList';\nexport const UPDATE_LIST_SUCCESSFUL = 'lists/updateListSucceeded';\nexport const DELETE_LIST = 'lists/deleteList';\nexport const DELETE_LIST_SUCCESSFUL = 'lists/deleteListSucceeded';\n\nexport const FETCH_REPORT = 'reports/fetchReport';\nexport const FETCH_REPORT_SUCCESSFUL = 'reports/fetchReportSucceeded';\n\nexport const FETCH_EXPENSES = 'expenses/fetchExpenses';\nexport const FETCH_EXPENSES_SUCCESSFUL = 'expenses/fetchExpensesSucceeded';\nexport const CREATE_EXPENSE = 'expenses/createExpense';\nexport const CREATE_EXPENSE_SUCCESSFUL = 'expenses/createExpenseSucceeded';\nexport const UPDATE_EXPENSE = 'expenses/updateExpense';\nexport const UPDATE_EXPENSE_SUCCESSFUL = 'expenses/updateExpenseSucceeded';\nexport const DELETE_EXPENSE = 'expenses/deleteExpense';\nexport const DELETE_EXPENSE_SUCCESSFUL = 'expenses/deleteExpenseSucceeded';\n\nexport const REQUEST_FAILED = 'requestFailed';\nexport const CLEAR_NOTIFICATIONS = 'clearNotifications';\n\nexport const defaultColor = '#7fb3d5';\n\nexport const dataList = [\n  {\n    value: 'Food & Drinks',\n    color: '#1fb003',\n  },\n  {\n    value: 'Shopping',\n    color: '#ffc300',\n  },\n  {\n    value: 'Healthcare',\n    color: '#1e8449',\n  },\n  {\n    value: 'Electricity',\n    color: '#34495e',\n  },\n  {\n    value: 'Transport',\n    color: '#d35400',\n  },\n  {\n    value: 'Travel',\n    color: '#8f659a',\n  },\n  {\n    value: 'Other',\n    color: '#a7b979',\n  },\n];\n","import { createAction } from '@reduxjs/toolkit';\nimport {\n  SIGN_UP, LOG_IN, AUTHENTICATE_USER, EDIT_USER, SIGN_OUT,\n  CREATE_LIST, UPDATE_LIST, DELETE_LIST, FETCH_EXPENSES,\n  CREATE_EXPENSE, UPDATE_EXPENSE, DELETE_EXPENSE,\n  FETCH_REPORT, REQUEST_FAILED, CLEAR_NOTIFICATIONS,\n} from '../constants';\n\nexport const signUpRequest = createAction(SIGN_UP, (data) => ({ payload: { user: data } }));\n\nexport const logInRequest = createAction(LOG_IN, (data) => ({ payload: data }));\n\nexport const authUser = createAction(AUTHENTICATE_USER, (data) => ({ payload: data }));\n\nexport const editUserRequest = createAction(EDIT_USER, (id, data) => (\n  {\n    payload: {\n      id,\n      data,\n    },\n  }\n));\n\nexport const signOutRequest = createAction(SIGN_OUT);\n\nexport const clearNotifications = createAction(CLEAR_NOTIFICATIONS);\n\nexport const fetchReport = createAction(FETCH_REPORT, (id) => ({ payload: id }));\n\nexport const createList = createAction(CREATE_LIST, (id, data) => (\n  {\n    payload: {\n      id,\n      data,\n    },\n  }\n));\n\nexport const updateList = createAction(UPDATE_LIST, (id, data) => (\n  {\n    payload: {\n      id,\n      data,\n    },\n  }\n));\n\nexport const deleteList = createAction(DELETE_LIST, (id) => ({ payload: id }));\n\nexport const fetchExpenses = createAction(FETCH_EXPENSES, (id) => ({ payload: id }));\n\nexport const createExpense = createAction(CREATE_EXPENSE, (id, data) => (\n  {\n    payload: {\n      id,\n      data,\n    },\n  }\n));\n\nexport const updateExpense = createAction(UPDATE_EXPENSE, (id, data) => (\n  {\n    payload: {\n      id,\n      data,\n    },\n  }\n));\n\nexport const deleteExpense = createAction(DELETE_EXPENSE, (id) => ({ payload: id }));\n\nexport const requestFailed = createAction(REQUEST_FAILED, (message) => ({ payload: message }));\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  authenticated: false,\n  user: null,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    authenticateUser: (state, action) => {\n      state.authenticated = action.payload.authenticated;\n      state.user = action.payload.user;\n    },\n    editUserSucceeded: (state, action) => {\n      state.user = action.payload;\n    },\n    signOutSucceeded: () => initialState,\n  },\n});\n\nexport const { authenticateUser, editUserSucceeded, signOutSucceeded } = userSlice.actions;\n\nexport default userSlice.reducer;\n","export const getUser = (state) => state.user;\n\nexport const getLists = (state) => (state.lists.length ? state.lists : null);\n\nexport const getExpenses = (state) => (state.expenses.length ? state.expenses : null);\n\nexport const getNotifications = (state) => state.notifications;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser, getNotifications } from '../selectors';\n\nexport const useFormState = (data) => {\n  const [state, setState] = useState(data);\n  const [visible, setVisible] = useState(false);\n\n  const toggleDisplay = () => setVisible((hidden) => !hidden);\n\n  useEffect(() => {\n    if (data) {\n      setState(data);\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const reset = () => setState(data);\n\n  return {\n    state,\n    handleChange,\n    visible,\n    toggleDisplay,\n    reset,\n  };\n};\n\nexport const useVerify = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { authenticated: loggedIn, user } = useSelector(getUser);\n  const { isLoading, error } = useSelector(getNotifications);\n\n  return {\n    loggedIn,\n    user,\n    isLoading,\n    error,\n    dispatch,\n    navigate,\n  };\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useVerify } from '../hooks';\nimport { Helmet } from 'react-helmet';\nimport '../assets/home.css';\n\n\n\nconst Home = () => {\n  const { loggedIn, navigate } = useVerify();\n\n  useEffect(() => {\n    if (loggedIn) navigate('app');\n  }, []);\n\n  return (\n    <div className=\"banner-area\">\n        <div className=\"banner-text\">\n            <h1>Expense's Made Easy</h1>\n            <p>Welcome to Expense's made easy, and app which will help you manage and track all of your expenses. You\n              can keep up to date with our easy to use services. With our easy to visualize charts you will be able to see \n              all your spending in a nice chart\n            </p>\n            <a href=\"/signup\">Signup</a>\n            <a href=\"/login\">Login</a>\n        </div>\n    </div>\n\n  );\n};\n\nHome.propTypes = {\n  reset: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import { Navbar, Nav } from \"rsuite\";\nimport { NavLink } from \"react-router-dom\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport { useEffect } from \"react\";\nimport { FaCode, FaDoorOpen } from \"react-icons/fa\";\nimport { signOutRequest } from \"../actions\";\nimport { useVerify } from \"../hooks\";\n\nconst NavBar = () => {\n  const { loggedIn, dispatch, navigate } = useVerify();\n  const handleSignOut = () => dispatch(signOutRequest());\n\n  useEffect(() => {\n    if (loggedIn === false) navigate(\"/\", { replace: true });\n  }, [loggedIn]);\n\n  return (\n    <Navbar style={{ background: \"#09070d\" }}>\n      <Navbar.Brand style={{ color: \"#61dafb\" }}>Expense</Navbar.Brand>\n      <Nav>\n        <Nav.Item as={NavLink} to=\"/app\" style={{ color: \"#61dafb\" }}>\n          Categories\n        </Nav.Item>\n        <Nav.Item as={NavLink} to=\"/app/reports\" style={{ color: \"#61dafb\" }}>\n          Reports\n        </Nav.Item>\n      </Nav>\n      <Nav pullRight>\n        {/* <Nav.Item as={NavLink} to=\"/devs\" icon={<FaCode /> } size=\"2em\" style={{ color: '#61dafb' }}>Devs</Nav.Item> */}\n        <Nav.Item\n          as={NavLink}\n          to=\"/\"\n          className=\"center\"\n          onClick={handleSignOut}\n          icon={<FaDoorOpen />}\n          size=\"2em\"\n          style={{ color: \"#61dafb\" }}\n        >\n          Sign Out\n        </Nav.Item>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import Proptypes from 'prop-types';\nimport { IoFastFoodSharp } from 'react-icons/io5';\nimport { GiWorld, GiTransportationRings, GiPayMoney } from 'react-icons/gi';\nimport {\n  FaPencilAlt, FaShoppingCart, FaTrash, FaFirstAid, FaPlug,\n} from 'react-icons/fa';\nimport { useFormState } from '../hooks';\nimport '../assets/list.css';\n\nconst List = ({\n  id, name, trackExpenses, updateList, deleteList,\n}) => {\n  const {\n    state, handleChange, visible, toggleDisplay, reset,\n  } = useFormState({ name });\n\n  const placeholder = (name) => {\n    switch (name) {\n      case 'Food & Drinks': return <IoFastFoodSharp />;\n      case 'Shopping': return <FaShoppingCart />;\n      case 'Healthcare': return <FaFirstAid />;\n      case 'Electricity': return <FaPlug />;\n      case 'Transport': return <GiTransportationRings />;\n      case 'Travel': return <GiWorld />;\n      default: return <GiPayMoney />;\n    }\n  };\n\n  const edit = () => {\n    if (visible) {\n      toggleDisplay();\n      reset();\n    } else {\n      toggleDisplay();\n    }\n  };\n\n  const update = (e) => {\n    e.preventDefault();\n    updateList(id, state);\n    toggleDisplay();\n  };\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"cards\">\n        <div className=\"front\">\n        <span className=\"fs-2\">{placeholder(name)}</span>\n        </div>\n        <div className=\"back\">\n          <span className=\"name\" onClick={edit}>{name} <FaPencilAlt /> </span>\n        {!visible && (\n          <button type=\"button\" className=\"category-btn\" onClick={() => trackExpenses(id, name)}>\n            Expenses\n          </button>\n        )}\n        </div>\n      </div>\n\n      {visible && (\n        <form className=\"list__editor\" onSubmit={update}>\n        <div className=\"inset\">\n          <input type=\"text\" name=\"name\" value={state.name} onChange={handleChange} />\n            <button type=\"submit\" className=\"btn list__btn\">Rename</button>\n            <button type=\"submit\" className=\"btn list__btn\" onClick={() => deleteList(id)}>\n              <FaTrash />\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nList.propTypes = {\n  id: Proptypes.number.isRequired,\n  name: Proptypes.string.isRequired,\n  trackExpenses: Proptypes.func.isRequired,\n  updateList: Proptypes.func.isRequired,\n  deleteList: Proptypes.func.isRequired,\n};\n\nexport default List;\n","import { useSelector } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport { FaPlus, FaWindowClose, FaSpinner } from 'react-icons/fa';\nimport { useFormState, useVerify } from '../hooks';\nimport {\n  createList, fetchExpenses, updateList, deleteList,\n} from '../actions';\nimport List from '../components/List';\nimport { dataList } from '../constants';\nimport { getLists } from '../selectors';\n\nconst Lists = () => {\n  const {\n    user, isLoading, error, dispatch, navigate,\n  } = useVerify();\n\n  const [handle] = user?.username.toUpperCase().split(/\\s/) ?? '';\n\n\n  const lists = useSelector(getLists);\n  const listNames = lists?.map((list) => list.name);\n  const availableOptions = dataList.filter(({ value }) => !listNames?.includes(value));\n\n  const {\n    state = {}, handleChange, visible, toggleDisplay, reset,\n  } = useFormState();\n\n  const addList = () => {\n    if (visible) {\n      toggleDisplay();\n      reset();\n    } else {\n      toggleDisplay();\n    }\n  };\n\n  const handleUpdate = (id, data) => dispatch(updateList(id, data));\n\n  const handleDelete = (id) => dispatch(deleteList(id));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (listNames?.includes(state.name)) return;\n    dispatch(createList(user?.id, state));\n    toggleDisplay();\n    reset();\n  };\n\n  const view = (id, name) => {\n    const query = `/app/tracker?id=${id}&list=${name}`;\n    dispatch(fetchExpenses(id));\n    navigate(query, { replace: true });\n  };\n\n  return (\n    <>\n      <div className=\"wrap-page\">\n\n        <section className=\"col-lg-4 offset-lg-4 mb-3\">\n          <Card className=\"custom-card h5\">\n            <Card.Body>\n              <span className=\"fs-8 fw-bold\">\n                Hello, &nbsp;\n                <span className=\"fs-8 fw-bold\">{handle}</span>\n              </span>\n              <Card.Text>\n              <button type=\"submit\" variant=\"outline-info\" size=\"sm\" onClick={addList}>\n                  {visible ? <FaWindowClose /> : <FaPlus />}\n                </button>\n                </Card.Text>\n            </Card.Body>\n          </Card>\n        </section>\n\n        {isLoading && <p className=\"page-loading\"><FaSpinner /></p>}\n\n        {visible && (\n          <form className=\"col-lg-4 offset-lg-4\" onSubmit={handleSubmit}>\n            <div className=\"inset\">\n            <input type=\"text\" className=\"me-3 size-md\" list=\"categories\" name=\"name\" onChange={handleChange} />\n            </div>\n            <datalist id=\"categories\">\n              {availableOptions.map(({ value, color }) => (\n                <option key={color} value={value} aria-label=\"category\" />\n              ))}\n            </datalist>\n            <button className=\"btn btn-sm\" type=\"submit\">Create</button>   \n          </form>\n        )}\n\n        <ul className=\"lists\">\n          <h4 className=\"fz-bold\">Categories</h4>\n          {lists?.map(({ id, name }) => (\n            <List\n              key={id}\n              id={id}\n              name={name}\n              trackExpenses={view}\n              updateList={handleUpdate}\n              deleteList={handleDelete}\n            />\n          )) ?? (\n            <li>\n              <p className=\"mb-0 fst-italic\">No lists of expenses available</p>\n            </li>\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Lists;\n","import PropTypes from 'prop-types';\nimport { FaTrash } from 'react-icons/fa';\nimport Form from 'react-bootstrap/Form';\n\nconst ExpenseForm = ({\n  id, title, amount, date, notes, setter, submit, cancel, remove,\n}) => {\n  const newExpense = id <= 0;\n\n  return (\n    <form className=\"row mw-form mx-auto px-1\" onSubmit={submit}>\n        <div className=\"inset\">\n        {/* <VoiceInput label=\"Title\" changeOnEntityType=\"title\" type=\"text\" value={title} onChange={setter} minLength={2} required /> */}\n        <label for=\"title\">Title*</label>\n        <input type=\"text\" name=\"title\" value={title} onChange={setter} minLength={2} required />\n      <Form.Group className={`${newExpense ? 'col-sm-4' : 'col-5'} mb-3`} controlId=\"amount\">\n        <label for=\"amount\">Amount ($)*</label>\n        <input type=\"number\" name=\"amount\" value={amount} onChange={setter} min={0.01} step={0.01} required />\n      </Form.Group>\n      <Form.Group className={`${newExpense ? 'col-sm-8' : 'col-7'} mb-3`} controlId=\"date\">\n      {/* <VoiceDatePicker label=\"Date\" changeOnEntityType=\"date\" type=\"date\" name=\"date\" value={date} onChange={setter} required /> */}\n        <label for=\"date\">Date*</label>\n        <input type=\"date\" name=\"date\" value={date} onChange={setter} required />\n      </Form.Group>\n        <label for=\"notes\">Description</label>\n        <input as=\"textarea\" rows={3} name=\"notes\" value={notes} onChange={setter} maxLength={140} />\n        </div>\n      {newExpense ? (\n        <div className=\"col-12\">\n          <button type=\"submit\" className=\"w-100 mb-3\">Create new expense</button>\n          <button type=\"submit\" variant=\"bg-light\" className=\"w-100 color-mix-two\" onClick={cancel}>Cancel</button>\n        </div>\n      ) : (\n        <div className=\"col-12 mb-2 px-0 text-end\">\n          <button type=\"submit\" className=\"fw-bold\" size=\"sm\">Update</button>\n          <button type=\"submit\" className=\"ms-3\" size=\"sm\" onClick={() => remove(id)}>\n            <FaTrash />\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nExpenseForm.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  date: PropTypes.string.isRequired,\n  notes: PropTypes.string.isRequired,\n  cancel: PropTypes.func,\n  remove: PropTypes.func,\n  setter: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n};\n\nExpenseForm.defaultProps = {\n  id: -1,\n  cancel: () => {},\n  remove: () => {},\n};\n\nexport default ExpenseForm;\n","import PropTypes from 'prop-types';\nimport { FaPencilAlt } from 'react-icons/fa';\nimport { useFormState } from '../hooks';\nimport ExpenseForm from './ExpenseForm';\n\nconst Expense = ({\n  id, title, amount, date, notes, onUpdate, onDelete,\n}) => {\n  const {\n    state, handleChange, visible, toggleDisplay, reset,\n  } = useFormState({\n    title, amount, date, notes,\n  });\n\n  const edit = () => {\n    if (visible) {\n      toggleDisplay();\n      reset();\n    } else {\n      toggleDisplay();\n    }\n  };\n\n  const update = (e) => {\n    e.preventDefault();\n    onUpdate(id, state);\n    toggleDisplay();\n  };\n\n  return (\n    <li>\n      <div className=\"details\">\n        <p>\n          <span className=\"fs-4 amount\">{`$${amount}`}</span>\n          <br />\n          <small>{date}</small>\n        </p>\n        <p className=\"align-self-center ms-2 flex-grow-1\">\n          <span className=\"fw1-bold\">{title}</span>\n          <br />\n          <span className=\"notes\">{notes || '...'}</span>\n        </p>\n        <button className=\"mb-1 toggle\" type=\"submit\" onClick={edit}>\n          <FaPencilAlt />\n        </button>\n      </div>\n      {visible && (\n        <div className=\"mt-3\">\n          <ExpenseForm\n            id={id}\n            title={state.title}\n            amount={state.amount}\n            date={state.date}\n            notes={state.notes || ''}\n            setter={handleChange}\n            remove={onDelete}\n            submit={update}\n          />\n        </div>\n      )}\n    </li>\n  );\n};\n\nExpense.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  notes: PropTypes.string,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nExpense.defaultProps = { notes: '' };\n\nexport default Expense;\n","import { FaChevronLeft, FaSpinner } from 'react-icons/fa';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useFormState, useVerify } from '../hooks';\nimport { createExpense, deleteExpense, updateExpense } from '../actions';\nimport ExpenseForm from '../components/ExpenseForm';\nimport Expense from '../components/Expense';\nimport { getExpenses } from '../selectors';\n\nconst Tracker = () => {\n  const {\n    isLoading, error, dispatch, navigate,\n  } = useVerify();\n\n  const [searchParams] = useSearchParams();\n  const listName = searchParams.get('list');\n  const listId = searchParams.get('id');\n\n  const expenses = useSelector(getExpenses);\n\n  const {\n    state = {}, handleChange, visible, toggleDisplay, reset,\n  } = useFormState();\n\n  const cancelAction = () => {\n    reset();\n    toggleDisplay();\n  };\n\n  const handleCreate = (e) => {\n    e.preventDefault();\n    dispatch(createExpense(listId, state));\n    toggleDisplay();\n    reset();\n  };\n\n  const handleUpdate = (id, data) => dispatch(updateExpense(id, data));\n\n  const handleDelete = (id) => dispatch(deleteExpense(id));\n\n  return (\n    <>\n      <div className=\"wrap-page mw-container mx-auto\">\n        <h3>{listName}</h3>\n\n        <div className=\"mt-4 mx-auto\">\n          {visible && (\n            <div className=\"mb-3\">\n              <ExpenseForm\n                title={state.title || ''}\n                amount={state.amount || ''}\n                date={state.date || ''}\n                notes={state.notes || ''}\n                setter={handleChange}\n                submit={handleCreate}\n                cancel={cancelAction}\n              />\n            </div>\n          )}\n          <div>\n            {!visible && (\n              <div className=\"track-it\">\n                <button type=\"button\" className=\"btn btn-sm\" onClick={() => navigate('/app')}>\n                  <FaChevronLeft />\n                  <span className=\"ms-2\">Back to Lists</span>\n                </button>\n                <button type=\"button\" className=\"btn btn-sm\" onClick={toggleDisplay}>\n                  Add expense\n                </button>\n              </div>\n            )}\n            {isLoading ? (\n              <p className=\"page-loading\"><FaSpinner /></p>\n            ) : (\n              <ul className=\"expenses mt-4 pt-3\">\n                {expenses?.map((expense) => (\n                  <Expense\n                    key={expense.id}\n                    id={expense.id}\n                    title={expense.title}\n                    amount={expense.amount}\n                    date={expense.date}\n                    notes={expense.notes}\n                    onUpdate={handleUpdate}\n                    onDelete={handleDelete}\n                  />\n                )) ?? <li>No record of expenses</li>}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Tracker;\n","import { useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FaSpinner } from 'react-icons/fa';\nimport { useVerify } from '../hooks';\nimport { dataList, defaultColor } from '../constants';\nimport buildChart from '../utils';\n\nconst Reports = () => {\n  const chartContainer = useRef(null);\n  const { isLoading } = useVerify();\n  const lists = useSelector((state) => state.lists);\n  const expenditure = useSelector((state) => state.reports);\n\n  const allCategories = lists?.map(({ id, name }) => {\n    const total = expenditure\n      ?.filter((expense) => expense.list_id === id)\n      .reduce((sum, expense) => sum + expense.amount, 0);\n    return { name, total };\n  });\n\n  const initChartData = useCallback(() => {\n    const ctx = chartContainer?.current;\n    const chartType = 'doughnut';\n    const labels = allCategories.map(({ name }) => name);\n    const data = allCategories.map(({ total }) => total);\n\n    const backgroundColor = labels\n      .map((category) => dataList\n        .find(({ value }) => category === value)?.color ?? defaultColor);\n\n    const config = {\n      ctx, labels, data, backgroundColor, chartType,\n    };\n\n    return config;\n  }, [expenditure]);\n\n  useEffect(() => {\n    const config = initChartData();\n    const chart = buildChart(config);\n    return () => chart.destroy();\n  }, []);\n\n  return (\n    <>\n      <div className=\"wrap-page\">\n        <section className=\"outcome\">\n          <h3>Total Outcome</h3>\n          <div>\n            {isLoading\n              ? <p className=\"page-loading\"><FaSpinner /></p>\n              : <canvas ref={chartContainer} />}\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Reports;\n","import Chart from 'chart.js/auto';\n\nexport default function build(config) {\n  const {\n    ctx, chartType, labels, data, radius, backgroundColor,\n  } = config;\n  Chart.defaults.color = \"orange\";\n\n  return new Chart(ctx, {\n    \n    type: chartType,\n    radius,\n    responsive: true,\n    maintainAspectRatio: false,\n    data: {\n      labels,\n      datasets: [\n        {\n          data,\n          backgroundColor,\n          hoverOffset: 4,\n        },\n      ],\n    },\n    options: {\n      plugins: {\n        title: {\n          display: true,\n          text: `Amounts in USD`,\n          color: 'white',\n          font: {\n            size: 24,\n          },\n          labels: {\n            color: 'white',\n          },\n        },\n      },\n    },\n  });\n}\n","import { Routes, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useVerify } from '../hooks';\nimport Navbar from './Nav';\nimport Lists from '../containers/Lists';\nimport Tracker from '../containers/Tracker';\nimport Reports from '../containers/Reports';\n\nconst Main = () => {\n  const { loggedIn, navigate } = useVerify();\n\n  useEffect(() => {\n    if (loggedIn === false) navigate('/', { replace: true });\n  }, [loggedIn]);\n\n  return (\n    <div className=\"vh-100 position-relative\">\n      <Navbar  />\n      <Routes>\n        <Route path=\"/\" element={<Lists />} />\n        <Route path=\"/tracker\" element={<Tracker />} />\n        <Route path=\"/reports\" element={<Reports />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default Main;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FaHome } from 'react-icons/fa';\n\n\nconst UserForm = ({\n  auth,\n  username,\n  email,\n  password,\n  confirm,\n  setter,\n  submit,\n  reset,\n}) => (\n  <form className={auth ? 'py-3' : 'py-1'} onSubmit={submit}>\n     <h1><Link to=\"/\"><FaHome className=\"display-6 mb-3\" /></Link>Sign up</h1>\n  <div className=\"inset\">\n  <p>\n    <label for=\"username\">USERNAME</label>\n    <input  type=\"text\" name=\"username\" minLength={2} value={username} onChange={setter} required />\n  </p>\n  <p>\n    <label for=\"email\">EMAIL</label>\n    <input  type=\"text\" name=\"email\" value={email} onChange={setter} required />\n  </p>\n  <p>\n    <label for=\"password\">PASSWORD</label>\n    <input type=\"password\" name=\"password\" minLength={6} value={password} onChange={setter} required  />\n  </p>\n  <p>\n    <label for=\"password\">PASSWORD CONFIRMATION</label>\n    <input type=\"password\" name=\"password_confirmation\" minLength={6} value={confirm} onChange={setter} required />\n  </p>\n  </div>\n  <p className=\"p-container\">\n    <button className=\"btn mb-3 w-100\" type=\"submit\">Sign Up</button>\n    <p>Already have an account? <Link to=\"/login\" onClick={reset}>Login In</Link></p>\n\n  </p>\n  </form>\n  \n);\n\nUserForm.propTypes = {\n  auth: PropTypes.bool.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string,\n  confirm: PropTypes.string,\n  setter: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  reset: PropTypes.func,\n};\n\nUserForm.defaultProps = {\n  password: '',\n  confirm: '',\n  reset: () => {},\n};\n\nexport default UserForm;\n","import { useEffect, useState } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport { useVerify } from '../hooks';\nimport { clearNotifications, signUpRequest } from '../actions';\nimport UserForm from '../components/UserForm';\n\nconst SignUp = () => {\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  const {\n    loggedIn, isLoading, error, dispatch, navigate,\n  } = useVerify();\n\n  useEffect(() => {\n    if (loggedIn) navigate('/app', { replace: true });\n  }, [loggedIn]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const mismatch = (name === 'password_confirmation') && value !== state.password;\n\n    if (mismatch) {\n      e.target.setCustomValidity('Password does not match');\n    } else e.target.setCustomValidity('');\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signUpRequest(state));\n  };\n\n  const resetFlash = () => {\n    if (error !== null) dispatch(clearNotifications());\n  };\n\n  return (\n    <div className=\"container pt-4 row mx-0\">\n      <div className=\"mw-md mx-auto\">\n        {isLoading\n          ? (<p className=\"page-loading\"><FaSpinner /></p>)\n          : (\n            <UserForm\n              auth={loggedIn}\n              username={state.username}\n              email={state.email}\n              password={state.password}\n              confirm={state.password_confirmation}\n              setter={handleChange}\n              submit={handleSubmit}\n              reset={resetFlash}\n            />\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { Link } from 'react-router-dom';\nimport { FaHome, FaSpinner } from 'react-icons/fa';\nimport { useEffect } from 'react';\nimport { useFormState, useVerify } from '../hooks';\nimport { clearNotifications, logInRequest } from '../actions';\nimport '../assets/LogIn.css';\n\nconst LogIn = () => {\n  const { state, handleChange } = useFormState({ username: '', password: '' });\n\n  const {\n    loggedIn, isLoading, error, dispatch, navigate,\n  } = useVerify();\n\n  useEffect(() => {\n    if (loggedIn) navigate('/app', { replace: true });\n  }, [loggedIn]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(logInRequest(state));\n  };\n\n  const resetFlash = () => {\n    if (error !== null) dispatch(clearNotifications());\n  };\n\n  return (\n      <div className=\"mw-md mx-auto\">\n        {isLoading ? <p className=\"page-loading\"><FaSpinner /></p>\n          : (\n        <form onSubmit={handleSubmit}>\n          <h1><Link to=\"/\"><FaHome className=\"display-6 mb-3\" /></Link> Log In</h1>\n          <div className=\"inset\">\n          <p>\n            <label for=\"username\">USERNAME</label>\n            <input  type=\"text\" name=\"username\" minLength={2} value={state.username} onChange={handleChange} required />\n          </p>\n          <p>\n            <label for=\"password\">PASSWORD</label>\n            <input type=\"password\" name=\"password\" minLength={6} value={state.password} onChange={handleChange} required />\n          </p>\n          <p>\n            <input type=\"checkbox\" name=\"remember\" id=\"remember\"/>\n            <label for=\"remember\" style={{display: 'inline'}}> Remember me </label>\n          </p>\n          </div>\n          <p className=\"p-container\">\n            <button className=\"btn mb-3 w-100\" type=\"submit\">Log in</button>\n            <p>Don't have an account? <Link to=\"/signup\" onClick={resetFlash}>Sign up</Link></p>\n          </p>\n          </form>\n       \n          )}\n      </div>\n  );\n};\n\nexport default LogIn;\n","import \"../assets/App.scss\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { clearNotifications } from \"../actions\";\nimport { authenticateUser } from \"../slice/user\";\nimport Home from \"./Home\";\nimport Main from \"./Main\";\nimport SignUp from \"../containers/SignUp\";\nimport LogIn from \"../containers/LogIn\";\n// import Dev from '../containers/Dev';\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\n\nconst alanKey =\n  \"ec782c9839e4d50b2bf11f1ffa85037b2e956eca572e1d8b807a3e2338fdd0dc/stage\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const resetAlerts = () => dispatch(clearNotifications());\n\n  useEffect(() => {\n    const storage = localStorage.getItem(\"exp_tracker\");\n    if (storage) {\n      dispatch(authenticateUser(JSON.parse(storage)));\n    }\n  }, []);\n\n  useEffect(() => {\n    alanBtn({\n      key: alanKey,\n      onCommand: ({ command, articles }) => {\n        if (command === \"newHeadlines\") {\n          console.log(articles);\n        }\n      },\n    });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home reset={resetAlerts} />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/login\" element={<LogIn />} />\n        <Route path=\"/app/*\" element={<Main />} />\n        {/* <Route path=\"/devs\" element={<Dev />} /> */}\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst ListSlice = createSlice({\n  name: 'lists',\n  initialState: [],\n  reducers: {\n    fetchListsSucceeded: (state, action) => action.payload,\n    createListSucceeded: (state, action) => {\n      state.push(action.payload);\n    },\n    updateListSucceeded: (state, action) => state.map((list) => (\n      list.id === action.payload.id\n        ? { ...list, ...action.payload }\n        : list\n    )),\n    deleteListSucceeded: (state, action) => state.filter((list) => list.id !== action.payload),\n  },\n});\n\nexport const {\n  fetchListsSucceeded,\n  createListSucceeded,\n  updateListSucceeded,\n  deleteListSucceeded,\n} = ListSlice.actions;\n\nexport default ListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst reportSlice = createSlice({\n  name: 'reports',\n  initialState: [],\n  reducers: {\n    fetchReportSucceeded: (state, action) => action.payload,\n  },\n});\n\nexport const { fetchReportSucceeded } = reportSlice.actions;\n\nexport default reportSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst expenseSlice = createSlice({\n  name: 'expenses',\n  initialState: [],\n  reducers: {\n    fetchExpensesSucceeded: (state, action) => action.payload,\n    createExpenseSucceeded: (state, action) => {\n      state.push(action.payload);\n    },\n    updateExpenseSucceeded: (state, action) => state\n      .map((expense) => (\n        expense.id === action.payload.id\n          ? { ...expense, ...action.payload }\n          : expense\n      )),\n    deleteExpenseSucceeded: (state, action) => state\n      .filter((expense) => expense.id !== action.payload),\n  },\n});\n\nexport const {\n  fetchExpensesSucceeded,\n  createExpenseSucceeded,\n  updateExpenseSucceeded,\n  deleteExpenseSucceeded,\n} = expenseSlice.actions;\n\nexport default expenseSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  clearNotifications, createExpense, createList, fetchExpenses,\n  fetchReport, logInRequest, requestFailed, signUpRequest,\n} from '../actions';\nimport { createExpenseSucceeded, fetchExpensesSucceeded } from './expenses';\nimport { createListSucceeded, fetchListsSucceeded } from './lists';\nimport { fetchReportSucceeded } from './reports';\nimport { authenticateUser } from './user';\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n};\n\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => builder\n    .addCase(requestFailed, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    .addMatcher(\n      isAnyOf(signUpRequest, logInRequest, fetchReport, createList, fetchExpenses, createExpense),\n      (state) => {\n        state.isLoading = true;\n        state.error = null;\n      },\n    ).addMatcher(\n      isAnyOf(\n        authenticateUser, fetchReportSucceeded, fetchListsSucceeded, createListSucceeded,\n        fetchExpensesSucceeded, createExpenseSucceeded, clearNotifications,\n      ),\n      () => initialState,\n    ),\n});\n\nexport default notificationSlice.reducer;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../constants';\n\nconst client = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n});\n\nclient.interceptors.request.use((config) => {\n  const storage = localStorage.getItem('exp_tracker');\n  const { token } = storage ? JSON.parse(storage) : { token: '' };\n  config.headers.common.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nexport const createAccount = (user) => client.post('users', user);\n\nexport const signIn = (user) => client.post('sessions', user);\n\nexport const userDetails = (id) => client.get(`users/${id}`);\n\nexport const editUserDetails = (id, params) => client.put(`users/${id}`, params);\n\nexport const signOut = () => client.delete('sessions');\n\nexport const fetchLists = (id) => client.get(`users/${id}/lists`);\n\nexport const createList = (id, params) => client.post(`users/${id}/lists`, params);\n\nexport const updateList = (id, params) => client.put(`/lists/${id}`, params);\n\nexport const deleteList = (id) => client.delete(`/lists/${id}`);\n\nexport const fetchExpenses = (id) => client.get(`lists/${id}/expenses`);\n\nexport const createExpense = (id, params) => client.post(`lists/${id}/expenses`, params);\n\nexport const updateExpense = (id, params) => client.put(`/expenses/${id}`, params);\n\nexport const deleteExpense = (id) => client.delete(`/expenses/${id}`);\n","import { call, put } from '@redux-saga/core/effects';\nimport { requestFailed } from '../actions';\nimport * as api from '../api';\nimport { authenticateUser, editUserSucceeded, signOutSucceeded } from '../slice/user';\n\nexport function* signUp({ payload }) {\n  try {\n    const { data } = yield call(api.createAccount, payload);\n    yield put(authenticateUser(data));\n    localStorage.setItem('exp_tracker', JSON.stringify(data));\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n\nexport function* signIn({ payload }) {\n  try {\n    const { data } = yield call(api.signIn, payload);\n    yield put(authenticateUser(data));\n    localStorage.setItem('exp_tracker', JSON.stringify(data));\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n\nexport function* editAccount({ payload }) {\n  const { id, data: params } = payload;\n  try {\n    const { data: { user } } = yield call(api.editUserDetails, id, params);\n    yield put(editUserSucceeded(user));\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n\nexport function* signOut() {\n  try {\n    const { data } = yield call(api.signOut);\n    yield put(signOutSucceeded(data));\n    localStorage.removeItem('exp_tracker');\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n","import { all, call, put } from '@redux-saga/core/effects';\nimport { requestFailed } from '../actions';\nimport { userDetails, fetchLists } from '../api';\nimport { fetchListsSucceeded } from '../slice/lists';\nimport { fetchReportSucceeded } from '../slice/reports';\n\nexport default function* fetchReports({ payload }) {\n  const { id } = payload.user;\n  try {\n    const [{ data: reports }, { data: lists }] = yield all([\n      call(userDetails, id),\n      call(fetchLists, id),\n    ]);\n\n    yield all([\n      put(fetchReportSucceeded(reports.expenses)),\n      put(fetchListsSucceeded(lists)),\n    ]);\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n","import { call, put } from '@redux-saga/core/effects';\nimport { requestFailed } from '../actions';\nimport * as api from '../api';\nimport { createListSucceeded, deleteListSucceeded, updateListSucceeded } from '../slice/lists';\n\nexport function* createList({ payload }) {\n  const { id, data: list } = payload;\n  try {\n    const { data } = yield call(api.createList, id, list);\n    yield put(createListSucceeded(data));\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n\nexport function* updateList({ payload }) {\n  const { id, data: params } = payload;\n  try {\n    const { data: { list } } = yield call(api.updateList, id, params);\n    yield put(updateListSucceeded(list));\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n\nexport function* deleteList({ payload }) {\n  try {\n    const { data: { id } } = yield call(api.deleteList, payload);\n    yield put(deleteListSucceeded(id));\n  } catch (e) {\n    yield put(requestFailed(e.message));\n  }\n}\n","import { call, put } from '@redux-saga/core/effects';\nimport * as api from '../api';\nimport { requestFailed } from '../actions';\nimport {\n  createExpenseSucceeded, deleteExpenseSucceeded,\n  fetchExpensesSucceeded, updateExpenseSucceeded,\n} from '../slice/expenses';\n\nexport function* fetchExpenses({ payload }) {\n  try {\n    const { data } = yield call(api.fetchExpenses, payload);\n    yield put(fetchExpensesSucceeded(data));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n\nexport function* createExpense({ payload }) {\n  const { id, data: expense } = payload;\n  try {\n    const { data } = yield call(api.createExpense, id, expense);\n    yield put(createExpenseSucceeded(data));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n\nexport function* updateExpense({ payload }) {\n  const { id, data: params } = payload;\n  try {\n    const { data: { expense } } = yield call(api.updateExpense, id, params);\n    yield put(updateExpenseSucceeded(expense));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n\nexport function* deleteExpense({ payload }) {\n  try {\n    const { data: { id } } = yield call(api.deleteExpense, payload);\n    yield put(deleteExpenseSucceeded(id));\n  } catch (error) {\n    yield put(requestFailed(error.message));\n  }\n}\n","import { runSaga } from 'redux-saga';\nimport { takeEvery, takeLatest } from '@redux-saga/core/effects';\nimport {\n  signUp, signIn, editAccount, signOut,\n} from './accountSagas';\nimport fetchReports from './reportSaga';\nimport { createList, updateList, deleteList } from './listSagas';\nimport {\n  fetchExpenses, createExpense, updateExpense, deleteExpense,\n} from './expenseSagas';\nimport {\n  SIGN_UP, LOG_IN, EDIT_USER, AUTHENTICATE_USER,\n  CREATE_LIST, UPDATE_LIST, DELETE_LIST,\n  FETCH_EXPENSES, CREATE_EXPENSE, UPDATE_EXPENSE, DELETE_EXPENSE,\n  SIGN_OUT,\n} from '../constants';\n\nexport default function* rootSaga() {\n  yield takeEvery(SIGN_UP, signUp);\n  yield takeEvery(LOG_IN, signIn);\n  yield takeLatest(AUTHENTICATE_USER, fetchReports);\n  yield takeLatest(EDIT_USER, editAccount);\n  yield takeLatest(SIGN_OUT, signOut);\n  yield takeEvery(CREATE_LIST, createList);\n  yield takeEvery(UPDATE_LIST, updateList);\n  yield takeLatest(DELETE_LIST, deleteList);\n  yield takeLatest(FETCH_EXPENSES, fetchExpenses);\n  yield takeEvery(CREATE_EXPENSE, createExpense);\n  yield takeEvery(UPDATE_EXPENSE, updateExpense);\n  yield takeLatest(DELETE_EXPENSE, deleteExpense);\n}\n\nexport const recordSaga = async (saga, initialAction) => {\n  const dispatched = [];\n\n  await runSaga(\n    {\n      dispatch: (action) => dispatched.push(action),\n    },\n    saga,\n    initialAction,\n  ).done;\n\n  return dispatched;\n};\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport createSagaMiddleware from '@redux-saga/core';\nimport user from '../slice/user';\nimport lists from '../slice/lists';\nimport reports from '../slice/reports';\nimport expenses from '../slice/expenses';\nimport notifications from '../slice/notifications';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: combineReducers({\n    user,\n    lists,\n    reports,\n    expenses,\n    notifications,\n  }),\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(sagaMiddleware),\n});\n\nexport default store;\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}